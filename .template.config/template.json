{
  "$schema": "http://json.schemastore.org/template",
  "author": "Jamie Nordmeyer",
  "classifications": ["Web", "ASP.NET", "API"],
  "identity": "StaticSphere.CleanArchitecture.Api",
  "name": "Clean Architecture Solution",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "shortName": "clean-arch",
  "sourceName": "CleanArchTemplate",
  "preferNameDirectory": true,

  "symbols": {
    "includeTests": {
      "type": "parameter",
      "datatype": "bool",
      "defaultValue": "true",
      "description": "Determines if the test projects should be included or not"
    },
    "skipRestore": {
      "type": "parameter",
      "datatype": "bool",
      "description": "If specified, skips the automatic restore of the project on create.",
      "defaultValue": "false"
    },
    "includeEF": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "postgres",
          "description": "Adds Postgres Entity Framework congiguration"
        },
        {
          "choice": "sqlserver",
          "description": "Adds SQL Server Entity Framework configuration"
        }
      ]
    },
    "includePostgres": {
      "type": "computed",
      "value": "(includeEF == \"postgres\")"
    },
    "includeSqlServer": {
      "type": "computed",
      "value": "(includeEF == \"sqlserver\")"
    },
    "includeDB": {
      "type": "computed",
      "value": "(includePostgres || includeSqlServer)"
    },
    "useStartup": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Determines if the API project should use Startup.cs instead of the newer Minimal API style Program.cs file",
      "defaultValue": "false"
    },
    "dbContextName": {
      "type": "parameter",
      "datatype": "text",
      "description": "If specified, sets the name of the EF DbContext when using EF. You MUST specify the `DbContext` suffix in this name if you want it in the class name generated.",
      "replaces": "ApplicationDbContext",
      "fileRename": "ApplicationDbContext"
    }
  },

  "sources": [
    {
      "exclude": [
        "**/[Bb]in/**",
        "**/[Oo]bj/**",
        ".template.config/**/*",
        "**/*.filelist",
        "**/*.user",
        "**/*.lock.json",
        ".vscode/**/*",
        "nuget.csproj"
      ],
      "modifiers": [
        {
          "condition": "(!includeTests)",
          "exclude": [
            "tests/CleanArchTemplate.Application.Tests/**/*",
            "tests/CleanArchTemplate.Infrastructure.Tests/**/*",
            "tests/CleanArchTemplate.Api.Tests/**/*"
          ]
        },
        {
          "condition": "(!includeDB)",
          "exclude": [
            "src/CleanArchTemplate.Application/Interfaces/Persistence/IApplicationDbContext.cs",
            "src/CleanArchTemplate.Infrastructure/Persistence/Configuration/**/*",
            "src/CleanArchTemplate.Infrastructure/Persistence/ApplicationDbContext.cs",
            "src/CleanArchTemplate.Infrastructure/Persistence/SeedData.cs"
          ]
        },
        {
          "condition": "(!useStartup)",
          "exclude": ["src/CleanArchTemplate.Api/Startup.cs"]
        }
      ]
    }
  ],
  "primaryOutputs": [
    {
      "path": "CleanArchTemplate.sln"
    }
  ],
  "postActions": [
    {
      "condition": "(!skipRestore)",
      "description": "Restore NuGet packages required by this project.",
      "manualInstructions": [{ "text": "Run 'dotnet restore'" }],
      "actionId": "210D431B-A78B-4D2F-B762-4ED3E3EA9025",
      "continueOnError": true
    }
  ],

  "SpecialCustomOperations": {
    "**/*.csproj": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["<!-- #if"],
            "else": ["<!-- #else"],
            "elseif": ["<!-- #elseif", "<!-- #elif"],
            "endif": ["<!-- #endif"],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    },
    "**/*.sln": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["---#if"],
            "else": ["---#else"],
            "elseif": ["---#elseif", "---#elif"],
            "endif": ["---#endif"],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    },
    "**/*.md": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["---#if"],
            "else": ["---#else"],
            "elseif": ["---#elseif", "---#elif"],
            "endif": ["---#endif"],
            "trim": "true",
            "wholeLine": "true"
          }
        }
      ]
    }
  }
}
